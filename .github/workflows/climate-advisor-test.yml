name: Test Climate Advisor and Deploy to EKS Test
permissions:
  contents: read
  packages: write
  checks: write

on:
  workflow_dispatch:
  push:
    branches:
      - main
    paths:
      - "climate-advisor/service/**"
      - "climate-advisor/llm_config.yaml"
      - "climate-advisor/prompts/**"
      - "climate-advisor/vector_db/**"
      - "k8s/climate-advisor-deploy.yml"
      - "k8s/climate-advisor-migrate.yml"
      - "k8s/climate-advisor-service.yml"
      - "k8s/climate-advisor-db-configmap.yml"
      - ".github/workflows/climate-advisor-test.yml"

concurrency:
  group: climate-advisor-test
  cancel-in-progress: true

jobs:
  test:
    runs-on: ubuntu-latest
    env:
      OPENROUTER_API_KEY: ${{ secrets.OPENROUTER_API_KEY_TEST }}
      OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY_CLIMATE_ADVISOR }}
      CA_LOG_LEVEL: debug
      CA_CORS_ORIGINS: "*"
      CC_BASE_URL: http://localhost:3000
      CA_DATABASE_URL: "sqlite+aiosqlite:///:memory:"

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python 3.11
        uses: actions/setup-python@v4
        with:
          python-version: "3.11"

      - name: Cache pip dependencies
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-climate-advisor-${{ hashFiles('climate-advisor/service/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-climate-advisor-

      - name: Install dependencies
        working-directory: climate-advisor/service
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install pytest pytest-asyncio pytest-cov coverage

      - name: Run unit tests
        working-directory: climate-advisor/service
        run: |
          pytest tests/test_cc_inventory_tool.py \
                 tests/test_citycatalyst_client.py \
                 tests/test_rag_tool.py \
                 tests/test_user_identity.py \
                 tests/test_document_embedding_model.py \
                 --junit-xml=test-results-unit.xml \
                 -v --tb=short --color=yes

      - name: Run TIER 1 critical tests
        working-directory: climate-advisor/service
        run: |
          pytest tests/test_api_routes.py \
                 tests/test_agent_service.py \
                 tests/test_e2e_conversation.py \
                 --junit-xml=test-results-tier1.xml \
                 -v --tb=short --color=yes

      - name: Generate test coverage report
        working-directory: climate-advisor/service
        run: |
          pytest tests/ \
                 --cov=app \
                 --cov-report=html \
                 --cov-report=term-missing \
                 --cov-report=xml \
                 -v || true

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v4
        with:
          files: ./climate-advisor/service/coverage.xml
          flags: climate-advisor
          name: climate-advisor-coverage
          fail_ci_if_error: false

      - name: Test report
        if: always()
        uses: dorny/test-reporter@v1
        with:
          name: Climate Advisor Test Results
          path: "climate-advisor/service/test-results-*.xml"
          reporter: "java-junit"
          fail-on-error: false

  build:
    needs: test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    env:
      REGISTRY: ghcr.io
      REPOSITORY: open-earth-foundation/citycatalyst-climate-advisor

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Get Git commit hash
        id: vars
        run: echo "commit_hash=$(git rev-parse --short HEAD)" >> $GITHUB_OUTPUT

      - name: Build and push image
        uses: docker/build-push-action@v5
        with:
          context: climate-advisor
          file: climate-advisor/service/Dockerfile
          push: true
          tags: |
            ${{ env.REGISTRY }}/${{ env.REPOSITORY }}:${{ steps.vars.outputs.commit_hash }}
            ${{ env.REGISTRY }}/${{ env.REPOSITORY }}:test

  deploy:
    needs: build
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    env:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID_EKS_DEV_USER }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY_EKS_DEV_USER }}
      EKS_DEV_NAME: ${{ secrets.EKS_DEV_NAME }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Create kubeconfig file
        run: aws eks update-kubeconfig --name ${{secrets.EKS_DEV_NAME}} --region us-east-1

      - name: Test connection to EKS
        run: kubectl get pods -n default

      - name: Deploy test service
        run: |
          kubectl create -f k8s/climate-advisor-migrate.yml -n default
          kubectl apply -f k8s/climate-advisor-db-configmap.yml -n default
          kubectl apply -f k8s/climate-advisor-service.yml -n default
          kubectl apply -f k8s/climate-advisor-deploy.yml -n default

          kubectl set env deployment/climate-advisor-deploy \
            OPENROUTER_API_KEY=${{secrets.OPENROUTER_API_KEY}} \
            OPENAI_API_KEY=${{secrets.OPENAI_API_KEY_CLIMATE_ADVISOR}} \
            CC_API_KEY=${{secrets.CC_SERVICE_API_KEY}} \
            CA_LOG_LEVEL=info \
            CA_CORS_ORIGINS="*" \
            CC_BASE_URL=https://citycatalyst.openearth.dev \
            LANGSMITH_API_KEY=${{secrets.LANGSMITH_API_KEY}} \
            LANGSMITH_WORKSPACE_ID=${{secrets.LANGSMITH_WORKSPACE_ID}} \
            -n default

          kubectl rollout restart deployment climate-advisor-deploy -n default
          kubectl rollout status deployment/climate-advisor-deploy -n default --timeout=300s
