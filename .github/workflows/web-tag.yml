name: Push tagged Web app to GHCR and deploy to production

permissions:
  contents: read
  packages: write

on:
  workflow_dispatch:
  push:
    paths:
      - app/**
      - k8s/prod/prod/cc-prod-migrate.yml
      - k8s/prod/cc-prod-seed.yml
      - k8s/prod/cc-prod-sync-catalogue.yml
      - k8s/prod/cc-prod-create-admin.yml
      - k8s/cc-web.yml
      - k8s/prod/cc-prod-seed.yml
      - k8s/prod/cc-prod-sync-catalogue.yml
      - k8s/prod/cc-prod-create-admin.yml
      - k8s/cc-web.yml
      - k8s/cc-web-deploy.yml
      - .github/workflows/web-tag.yml
    tags:
      - "v[0-9]+.[0-9]+.[0-9]+"

jobs:

  runTests:
    runs-on: ubuntu-latest
    if: ${{ !contains(github.ref, '-') }}
    env:
      NODE_ENV: test
      NEXTAUTH_SECRET: "diTMz/XLX4edSmmfzwJtmzKjCJGRt81Gf0PdjO3IPs8="
      NEXTAUTH_URL: "http://localhost:3000"
      CDP_API_KEY: ${{ secrets.CDP_API_KEY_TEST }}
      CDP_MODE: "test"
    defaults:
      run:
        working-directory: ./app
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: "npm"
          cache-dependency-path: app/package-lock.json

      - name: Install dependencies
        run: npm ci

      - name: Set up database
        env:
          GLOBAL_API_URL: https://ccglobal-test.openearth.dev
        run: |
          docker run --name github_action_postgresql -d -p 5432:5432 -e POSTGRES_HOST_AUTH_METHOD=trust -e POSTGRES_PASSWORD="" postgres
          sleep 10
          createuser -w -h localhost -p 5432 -U postgres citycatalyst
          createdb -w -h localhost -p 5432 -U postgres citycatalyst -O citycatalyst
          cp env.example .env
          npm run db:migrate
          npm run db:seed
          npm run sync-catalogue
          npm run sync-emissions-factors

      - name: Run NextJS build
        run: npm run build

      - name: Run API tests
        run: npm run api:test

      - name: Install Playwright Browsers
        run: npx playwright install --with-deps
      - name: Run Playwright tests
        run: npx playwright test
      - uses: actions/upload-artifact@v4
        if: always()
        with:
          name: playwright-report
          path: playwright-report/
          retention-days: 30

      - name: Shut down database
        run: docker stop github_action_postgresql

  pushToGHCR:
    needs: runTests
    runs-on: ubuntu-latest
    if: ${{ !contains(github.ref, '-') }}
    steps:
      - uses: actions/checkout@v4

      - name: Extract version from tag
        id: version
        run: |
          VERSION=${GITHUB_REF#refs/tags/v}
          echo "full_version=$VERSION" >> $GITHUB_OUTPUT

          MAJOR=$(echo $VERSION | cut -d. -f1)
          echo "major_version=$MAJOR" >> $GITHUB_OUTPUT

          MINOR=$(echo $VERSION | cut -d. -f1-2)
          echo "minor_version=$MINOR" >> $GITHUB_OUTPUT

          echo "Extracted versions:"
          echo "  Full: $VERSION"
          echo "  Major: $MAJOR"
          echo "  Minor: $MINOR"

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to the Container registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push full image
        uses: docker/build-push-action@v5
        with:
          platforms: linux/amd64
          context: ./app
          target: full-build
          push: true
          tags: |
            ghcr.io/open-earth-foundation/citycatalyst:${{ github.sha }}
            ghcr.io/open-earth-foundation/citycatalyst:stable
            ghcr.io/open-earth-foundation/citycatalyst:${{ steps.version.outputs.major_version }}
            ghcr.io/open-earth-foundation/citycatalyst:${{ steps.version.outputs.minor_version }}
            ghcr.io/open-earth-foundation/citycatalyst:${{ steps.version.outputs.full_version }}
          build-args: |
            NEXT_PUBLIC_API_URL=https://citycatalyst.io
            NEXT_PUBLIC_OPENCLIMATE_API_URL=https://api.openclimate.network
          cache-from: |
            type=gha,scope=citycatalyst-shared
            type=gha,scope=${{ github.ref_name }}
            type=gha,scope=main
            type=gha,scope=develop
          cache-to: type=gha,mode=max,scope=citycatalyst-shared

      - name: Build and push web image
        uses: docker/build-push-action@v5
        with:
          platforms: linux/amd64
          context: ./app
          target: release
          push: true
          tags: |
            ghcr.io/open-earth-foundation/citycatalyst-web:${{ github.sha }}
            ghcr.io/open-earth-foundation/citycatalyst-web:stable
            ghcr.io/open-earth-foundation/citycatalyst-web:${{ steps.version.outputs.major_version }}
            ghcr.io/open-earth-foundation/citycatalyst-web:${{ steps.version.outputs.minor_version }}
            ghcr.io/open-earth-foundation/citycatalyst-web:${{ steps.version.outputs.full_version }}
          build-args: |
            NEXT_PUBLIC_API_URL=https://citycatalyst.io
            NEXT_PUBLIC_OPENCLIMATE_API_URL=https://api.openclimate.network
          cache-from: |
            type=gha,scope=citycatalyst-shared
            type=gha,scope=${{ github.ref_name }}
            type=gha,scope=main
            type=gha,scope=develop
          cache-to: type=gha,mode=max,scope=citycatalyst-shared

  deployToEKS:
    needs: pushToGHCR
    if: ${{ !contains(github.ref, '-') }}
    runs-on: ubuntu-latest
    env:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID_EKS_PROD_USER }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY_EKS_PROD_USER }}
      EKS_PROD_NAME: ${{ secrets.EKS_PROD_NAME }}
      SHA: ${{ github.sha }}
      REF: ${{ github.ref }}
      WEBIMAGE: ghcr.io/open-earth-foundation/citycatalyst-web
      MAINTIMAGE: ghcr.io/open-earth-foundation/citycatalyst
    steps:
      - uses: actions/checkout@v4

      - name: Creating kubeconfig file
        run: aws eks update-kubeconfig --name ${{secrets.EKS_PROD_NAME}} --region us-east-1

      - name: Testing connection to EKS
        run: kubectl get pods -n default

      - name: Deploying service
        run: |
          export VERSION=${REF#refs/tags/v}
          kubectl create -f k8s/prod/cc-prod-migrate.yml -n default
          kubectl create -f k8s/prod/cc-prod-seed.yml -n default
          kubectl apply -f k8s/prod/cc-prod-sync-catalogue.yml -n default
          kubectl apply -f k8s/cc-web-deploy.yml -n default
          kubectl set image deployment/cc-web-deploy \
            cc-web=$WEBIMAGE:$VERSION \
            -n default
          kubectl set image cronjob/cc-prod-sync-catalogue \
            cc-sync-catalogue=$MAINTIMAGE:$VERSION \
            -n default
          kubectl set env deployment/cc-web-deploy \
            SMTP_USER=${{secrets.SMTP_USER}} \
            SMTP_PASSWORD=${{secrets.SMTP_PASSWORD}} \
            NEXTAUTH_SECRET=${{secrets.NEXTAUTH_SECRET}} \
            RESET_TOKEN_SECRET=${{secrets.RESET_TOKEN_SECRET}} \
            VERIFICATION_TOKEN_SECRET=${{secrets.VERIFICATION_TOKEN_SECRET}} \
            OPENAI_API_KEY=${{secrets.OPENAI_API_KEY_PROD}} \
            "OPENAI_ASSISTANT_ID=asst_FCZ1wta3NElIFXCxDO1KME9I" \
            HUGGINGFACE_API_KEY=${{secrets.HUGGINGFACE_API_KEY}} \
            "ADMIN_EMAILS=${{secrets.ADMIN_EMAILS}}" \
            "ADMIN_NAMES=${{secrets.ADMIN_NAMES}}" \
            "DEFAULT_ADMIN_EMAIL=${{secrets.DEFAULT_ADMIN_EMAIL}}" \
            "DEFAULT_ADMIN_PASSWORD=${{secrets.DEFAULT_ADMIN_PASSWORD}}" \
            "HOST=https://citycatalyst.io" \
            "NEXTAUTH_URL=https://citycatalyst.io" \
            "NEXT_PUBLIC_API_URL=https://api.citycatalyst.io" \
            "GLOBAL_API_URL=https://api.citycatalyst.io" \
            "HIAP_API_URL=http://hiap-service-dev" \
            "NEXT_PUBLIC_OPENCLIMATE_API_URL=https://app.openclimate.network" \
            "OPENCLIMATE_API_URL=https://app.openclimate.network" \
            "NEXT_PUBLIC_FEATURE_FLAGS=ENTERPRISE_MODE,ACCOUNT_SETTINGS_ENABLED,ANALYTICS_ENABLED" \
            "NEXT_PUBLIC_POSTHOG_KEY=${{secrets.NEXT_PUBLIC_POSTHOG_KEY}}" \
            "NEXT_PUBLIC_POSTHOG_HOST=https://eu.i.posthog.com" \
            "NEXT_PUBLIC_DEPLOYMENT_ENV=production" \
            "AWS_FILE_UPLOAD_S3_BUCKET_ID=citycatalyst-files-prod" \
            "AWS_FILE_UPLOAD_REGION=us-east-1" \
            "AWS_REGION"=${{secrets.AWS_REGION}} \
            "AWS_ACCESS_KEY_ID"=${{secrets.AWS_ACCESS_KEY_ID_PROD}} \
            "AWS_SECRET_ACCESS_KEY"=${{secrets.AWS_SECRET_ACCESS_KEY_PROD}} \
            "AWS_S3_BUCKET_ID"=${{secrets.AWS_S3_BUCKET_ID_PROD}} \
            CDP_API_KEY=${{secrets.CDP_API_KEY_TEST}}
          kubectl create -f k8s/prod/cc-prod-create-admin.yml -n default
          kubectl rollout restart deployment cc-web-deploy -n default
