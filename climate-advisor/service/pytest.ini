[pytest]
# Pytest configuration for Climate Advisor service tests

testpaths = tests
python_files = test_*.py
python_classes = *Tests
python_functions = test_*

# Markers for test categorization
markers =
    unit: Unit tests for individual components
    integration: Integration tests for multi-component workflows
    e2e: End-to-end tests for complete user workflows
    api: API route tests
    streaming: Streaming response tests
    slow: Slow running tests

# Asyncio configuration
asyncio_mode = auto

# Output settings
addopts = 
    -v
    --strict-markers
    --tb=short
    --disable-warnings

# Coverage settings
[coverage:run]
source = app
omit =
    */tests/*
    */migrations/*
    */__pycache__/*

[coverage:report]
exclude_lines =
    pragma: no cover
    def __repr__
    raise AssertionError
    raise NotImplementedError
    if __name__ == .__main__.:
    if TYPE_CHECKING:
    @abstractmethod
