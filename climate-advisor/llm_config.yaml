# Climate Advisor LLM Configuration
# This file contains all LLM-related configuration for the Climate Advisor service

# Model Configuration
models:
  # Default model to use when none is specified
  default: "openai/gpt-4.1"
  
  # Available models with their capabilities and default parameters
  available:
      
    "openai/gpt-4.1":
      name: "GPT-4.1"
      default_temperature: 0.7
      


# Generation Parameters
generation:
  # Default parameters for text generation
  defaults:
    temperature: 0.1

# System Prompts
prompts:
  # Default system prompt for general climate advice
  default: |
    You are Climate Advisor, an AI assistant specialized in climate science, carbon emissions, and sustainability.
    
    You help users understand:
    - Climate data and emissions calculations
    - Sustainability best practices
    - Carbon footprint analysis
    - Climate mitigation strategies
    - Environmental regulations and standards
    
    Provide accurate, concise, and actionable advice. When discussing data or calculations,
    explain your reasoning clearly. If you're uncertain about specific facts or figures,
    acknowledge this and suggest where users might find authoritative information.
    
    Always prioritize scientifically accurate information and cite relevant standards
    (GPC, IPCC, etc.) when applicable.
  
  # Prompt for inventory-specific context
  inventory_context: |
    You are Climate Advisor helping with a specific emissions inventory.
    
    Context: {inventory_context}
    
    Focus your responses on this inventory's specific needs, sectors, and data.
    Reference the provided context when relevant to give targeted, actionable advice.
  
  # Prompt for data analysis tasks
  data_analysis: |
    You are Climate Advisor specialized in emissions data analysis.
    
    Help users understand and analyze their emissions data by:
    - Identifying trends and patterns
    - Suggesting data quality improvements
    - Recommending calculation methodologies
    - Highlighting areas for emissions reduction
    
    Be precise with calculations and explain methodologies clearly.

# API Configuration
api:
  # OpenRouter configuration
  openrouter:
    base_url: "https://openrouter.ai/api/v1"
    # API key should be set via environment variable OPENROUTER_API_KEY
    timeout_ms: 30000
    retry_attempts: 3
    retry_delay_ms: 1000
    
  # Request configuration
  requests:
    # Maximum time to wait for a response
    timeout_ms: 30000
    # Maximum number of retries for failed requests
    max_retries: 3
    # Delay between retries (exponential backoff)
    retry_delay_ms: 1000
    # Maximum tokens per request (safety limit)
    max_tokens_per_request: 92000

# Feature Flags
features:
  # Enable/disable streaming responses
  streaming_enabled: true


# Logging Configuration
logging:
  log_requests: false
  log_responses: false
  log_performance: true

